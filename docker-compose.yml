version: "3.9"

services:
  login:
    build: ./services/login
    environment:
      SKYLINE_PORT: ${LOGIN_PORT}
      SKYLINE_LOG_LEVEL: ${LOGIN_LOG_LEVEL}
      SKYLINE_PNR_DB_URL: mongodb://${PNR_USER}:${PNR_PASSWORD}@pnr:${PNR_PORT}
      SKYLINE_PNR_DB_NAME: ${PNR_DB_NAME}
      SKYLINE_PNR_DB_COLLECTION_NAME: ${PNR_COLLECTION_NAME}
      SKYLINE_ACCESS_TOKEN_SECRET: ${SKYLINE_SECRET}
    expose:
      - ${LOGIN_PORT}
    ports:
      - 8081:${LOGIN_PORT}
    depends_on:
      - pnr
    restart: unless-stopped

  flights:
    build: ./services/flights
    environment:
      SKYLINE_PORT: ${FLIGHTS_PORT}
      SKYLINE_LOG_LEVEL: ${FLIGHTS_LOG_LEVEL}
      SKYLINE_INVENTORY_MANAGER_URL: http://inventory-manager:${INVENTORY_MANAGER_PORT}/${INVENTORY_MANAGER_GRAPHQL_ENDPOINT}
    expose:
      - ${FLIGHTS_PORT}
    ports:
      - 8082:${FLIGHTS_PORT}
    depends_on:
      - inventory-manager
    restart: unless-stopped

  booking:
    build: ./services/booking
    environment:
      SKYLINE_PORT: ${BOOKING_PORT}
      SKYLINE_LOG_LEVEL: ${BOOKING_LOG_LEVEL}
      SKYLINE_ACCESS_TOKEN_SECRET: ${SKYLINE_SECRET}
      SKYLINE_PNR_DB_URI: mongodb://${PNR_USER}:${PNR_PASSWORD}@pnr:${PNR_PORT}/${PNR_DB_NAME}
      SKYLINE_INVENTORY_MANAGER_URL: http://inventory-manager:${INVENTORY_MANAGER_PORT}/${INVENTORY_MANAGER_GRAPHQL_ENDPOINT}
      SKYLINE_RABBITMQ_URI: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_AMQP_PORT}/${RABBITMQ_VHOST}
      SKYLINE_TICKET_EXCHANGE_NAME: ${RABBITMQ_TICKET_EXCHANGE_NAME}
      SKYLINE_TICKET_BOOKING_ROUTING_KEY: ${RABBITMQ_TICKET_BOOKING_ROUTING_KEY}
      SKYLINE_EMAIL_EXCHANGE_NAME: ${RABBITMQ_EMAIL_EXCHANGE_NAME}
      SKYLINE_EMAIL_BOOKING_CONFIRMATION_ROUTING_KEY: ${RABBITMQ_EMAIL_BOOKING_CONFIRMATION_ROUTING_KEY}
      SKYLINE_EMAIL_BOOKING_CANCELLATION_ROUTING_KEY: ${RABBITMQ_EMAIL_BOOKING_CANCELLATION_ROUTING_KEY}
      SKYLINE_EMAIL_BOARDING_PASS_ROUTING_KEY: ${RABBITMQ_EMAIL_BOARDING_PASS_ROUTING_KEY}
    expose:
      - ${BOOKING_PORT}
    ports:
      - 8083:${BOOKING_PORT}
    depends_on:
      - inventory-manager
      - pnr
      - rabbitmq
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9.13-management
    hostname: skyline-rabbitmq # See: https://stackoverflow.com/questions/41330514/docker-rabbitmq-persistency
    environment:
      RABBITMQ_NODE_PORT: ${RABBITMQ_AMQP_PORT}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    expose:
      - ${RABBITMQ_AMQP_PORT}
      - 15672
    ports:
      - 5672:${RABBITMQ_AMQP_PORT}
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    restart: unless-stopped

  inventory-manager:
    build: ./services/inventory-manager
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${INVENTORY_USER}:${INVENTORY_PASSWORD}@inventory:${INVENTORY_PORT}/${INVENTORY_DB_NAME}
      HASURA_GRAPHQL_ADMIN_SECRET: ${INVENTORY_MANAGER_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${INVENTORY_MANAGER_UNAUTHORIZED_ROLE}
      HASURA_GRAPHQL_SERVER_PORT: ${INVENTORY_MANAGER_PORT}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    expose:
      - ${INVENTORY_MANAGER_PORT}
    ports:
      - 8080:${INVENTORY_MANAGER_PORT}
    depends_on:
      - inventory
    restart: unless-stopped

  inventory:
    build:
      context: ./db/inventory
      target: development
    environment:
      POSTGRES_USER: ${INVENTORY_USER}
      POSTGRES_PASSWORD: ${INVENTORY_PASSWORD}
      POSTGRES_DB: ${INVENTORY_DB_NAME}
    expose:
      - ${INVENTORY_PORT}
    ports:
      - 5432:${INVENTORY_PORT}
    volumes:
      - inventory-data:/var/lib/postgresql/data
    restart: unless-stopped

  pnr:
    build:
      context: ./db/pnr
      target: development
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PNR_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${PNR_PASSWORD}
      MONGO_INITDB_DATABASE: ${PNR_DB_NAME}
    expose:
      - ${PNR_PORT}
    ports:
      - 27017:${PNR_PORT}
    volumes:
      - pnr-data:/data/db
    restart: unless-stopped

volumes:
  rabbitmq-data:
  inventory-data:
  pnr-data:
